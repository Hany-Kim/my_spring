package hellojpa;

import jakarta.persistence.DiscriminatorColumn;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Inheritance;
import jakarta.persistence.InheritanceType;

@Entity
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
public abstract class Item {

    @Id @GeneratedValue(strategy = GenerationType.TABLE)
    private Long id;

    private String name;
    private int price;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getPrice() {
        return price;
    }

    public void setPrice(int price) {
        this.price = price;
    }

    /*
    * JPA는 기본전략이 싱글 테이블로 구성되게 한다.
    * 싱글 테이블 전략은 @DiscriminatorColumn을 추가하지 않아도 DTYPE이 필수로 추가되어 있다.
    * 싱글 테이블 전략은 데이터 조회만으로 판별하기 힘들기 때문
    *
    * create table Item (
        price integer not null,
        id bigint generated by default as identity,
        DTYPE varchar(31) not null,
        actor varchar(255),
        artist varchar(255),
        author varchar(255),
        director varchar(255),
        isbn varchar(255),
        name varchar(255),
        primary key (id)
    )
    *
    * 조인 전략을 사용하기 위해서는
    * @Inheritance(strategy = InheritanceType.JOINED) 를 추가한다.
    * */

    /*
    * @DiscriminatorColumn을 추가하면 DTYPE이 테이블에 추가된것을 확인할 수 있다.
    * DTYPE은 Entity 이름이 들어간다. -> 운영측면에서 왠만하면 추가하는 편이 좋다.
    *
    * create table Item (
        price integer not null,
        id bigint generated by default as identity,
        DTYPE varchar(31) not null,
        name varchar(255),
        primary key (id)
    )
    *
    * */

    /*
    * TABLE_PER_CLASS 전략을 사용하면
    * 슈퍼타입 테이블(추상 테이블(Item))을 두지 않고, 각 서브타입(Entity)에 공통 Column을 각각 추가하여 관리
    * Item 테이블은 생기지 않는다.
    *
    * create table Album (
        price integer not null,
        id bigint not null,
        artist varchar(255),
        name varchar(255),
        primary key (id)
    )
    * create table Book (
        price integer not null,
        id bigint not null,
        author varchar(255),
        isbn varchar(255),
        name varchar(255),
        primary key (id)
    )
    * create table Movie (
        price integer not null,
        id bigint not null,
        actor varchar(255),
        director varchar(255),
        name varchar(255),
        primary key (id)
    )
    * */
}
